{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { raceWith } from './raceWith';\nexport function race() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return raceWith.apply(void 0, __spreadArray([], __read(argsOrArgArray(args))));\n}","map":{"version":3,"mappings":";AACA,SAASA,cAAT,QAA+B,wBAA/B;AACA,SAASC,QAAT,QAAyB,YAAzB;AAeA,OAAM,SAAUC,IAAV,GAAc;AAAI;;OAAA,yCAAc;AAAdC;;;AACtB,SAAOF,QAAQ,MAAR,CAAQ,MAAR,EAAQG,yBAAIJ,cAAc,CAACG,IAAD,CAAlB,EAAR,CAAP;AACD","names":["argsOrArgArray","raceWith","race","args","__spreadArray"],"sources":["C:\\Users\\Влад\\OneDrive\\Рабочий стол\\stopwatch\\sw\\node_modules\\rxjs\\src\\internal\\operators\\race.ts"],"sourcesContent":["import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { raceWith } from './raceWith';\n\n/** @deprecated Replaced with {@link raceWith}. Will be removed in v8. */\nexport function race<T, A extends readonly unknown[]>(otherSources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link raceWith}. Will be removed in v8. */\nexport function race<T, A extends readonly unknown[]>(...otherSources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of this Observable and supplied Observables.\n * @param args Sources used to race for which Observable emits first.\n * @return A function that returns an Observable that mirrors the output of the\n * first Observable to emit an item.\n * @deprecated Replaced with {@link raceWith}. Will be removed in v8.\n */\nexport function race<T>(...args: any[]): OperatorFunction<T, unknown> {\n  return raceWith(...argsOrArgArray(args));\n}\n"]},"metadata":{},"sourceType":"module"}